/* Q.1 What categories are the most popular? */

WITH rental_list
AS (SELECT
  rental_id,
  DATE_PART('day', return_date ::timestamp - rental_date ::timestamp) AS rental_duration,
  inventory_id
FROM rental)
SELECT
  c.name AS category,
  COUNT(*) AS rental_count,
  SUM(rental_duration) AS total_days_rented
FROM rental r
JOIN inventory i
  ON r.inventory_id = i.inventory_id
JOIN rental_list rl
  ON r.rental_id = rl.rental_id
JOIN film_category fc
  ON i.film_id = fc.film_id
JOIN category c
  ON fc.category_id = c.category_id
GROUP BY 1
ORDER BY 2 DESC


/* Q.2 What are the top rented films in each category? */

WITH title_list
AS (SELECT
  f.title,
  COUNT(*) AS rental_count,
  c.name AS category
FROM rental r
JOIN inventory i
  ON r.inventory_id = i.inventory_id
JOIN film f
  ON i.film_id = f.film_id
JOIN film_category fc
  ON i.film_id = fc.film_id
JOIN category c
  ON fc.category_id = c.category_id
GROUP BY 1,
         3)
SELECT
  *
FROM (SELECT
  *,
  RANK() OVER (
  PARTITION BY category
  ORDER BY rental_count DESC
  ) rank_in_category
FROM title_list) AS ranked_list
WHERE rank_in_category = 1
ORDER BY 3, 1


/* Q.3 How does the number of rentals compare by month for each store? */

SELECT
  COUNT(*),
  s.store_id,
  CASE
    WHEN DATE_TRUNC('month', rental_date) = '2005-05-01' THEN 'May'
    WHEN DATE_TRUNC('month', rental_date) = '2005-06-01' THEN 'June'
    WHEN DATE_TRUNC('month', rental_date) = '2005-07-01' THEN 'July'
    ELSE 'August'
  END AS month_rented
FROM rental r
JOIN staff s
  ON r.staff_id = s.staff_id
WHERE DATE_TRUNC('year', rental_date) = '2005-01-01'
GROUP BY 2,
         3
ORDER BY 2


/* Q.4 Who are the 10 highest paying customers and how much did they pay per month? */

WITH top10_c AS (
  SELECT customer_id, SUM(amount)
  FROM payment
  GROUP BY 1
  ORDER BY 2 DESC
  LIMIT 10
)
SELECT CONCAT(c.first_name, ' ', c.last_name), SUM(p.amount), DATE_TRUNC('month', p.payment_date)
FROM payment p
JOIN customer c
  ON p.customer_id = c.customer_id
JOIN top10_c
  ON c.customer_id = top10_c.customer_id
GROUP BY 1, 3
ORDER BY 1, 3
